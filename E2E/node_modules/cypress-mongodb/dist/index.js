"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addCommands = exports.configurePlugin = void 0;
var aggregate_util = require("./utils/aggregation");
var aggregate_commands = require("./commands/aggregation");
var collection_util = require("./utils/collection");
var collection_commands = require("./commands/collection");
var insert_util = require("./utils/insert");
var insert_commands = require("./commands/insert");
var delete_util = require("./utils/delete");
var delete_commands = require("./commands/delete");
var find_util = require("./utils/find");
var find_commands = require("./commands/find");
var update_util = require("./utils/update");
var update_commands = require("./commands/update");
function configurePlugin(on) {
    on('task', {
        aggregate: function (args) {
            return aggregate_util.aggregate(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        createCollection: function (args) {
            return collection_util.createCollection(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        dropCollection: function (args) {
            return collection_util.dropCollection(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        insertOne: function (args) {
            return insert_util.insertOne(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        insertMany: function (args) {
            return insert_util.insertMany(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        deleteOne: function (args) {
            return delete_util.deleteOne(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        deleteMany: function (args) {
            return delete_util.deleteMany(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        findOne: function (args) {
            return find_util.findOne(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        findMany: function (args) {
            return find_util.findMany(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        updateOne: function (args) {
            return update_util.updateOne(args).then(function (result) {
                return result;
            });
        },
    });
    on('task', {
        updateMany: function (args) {
            return update_util.updateMany(args).then(function (result) {
                return result;
            });
        },
    });
}
exports.configurePlugin = configurePlugin;
function addCommands() {
    Cypress.Commands.add('aggregate', aggregate_commands.aggregate);
    Cypress.Commands.add('createCollection', collection_commands.createCollection);
    Cypress.Commands.add('dropCollection', collection_commands.dropCollection);
    Cypress.Commands.add('insertOne', insert_commands.insertOne);
    Cypress.Commands.add('insertMany', insert_commands.insertMany);
    Cypress.Commands.add('deleteOne', delete_commands.deleteOne);
    Cypress.Commands.add('deleteMany', delete_commands.deleteMany);
    Cypress.Commands.add('findOne', find_commands.findOne);
    Cypress.Commands.add('findMany', find_commands.findMany);
    Cypress.Commands.add('updateOne', update_commands.updateOne);
    Cypress.Commands.add('updateMany', update_commands.updateMany);
    console.log('MongoDB plugin configured');
}
exports.addCommands = addCommands;
